version: "3"

services:
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=course_db
    ports:
      - "5432:5432"
    volumes:
      - ./_storage/postgres_data:/var/lib/postgresql/data
    networks:
      - bot-net

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"  # AMQP protocol port
      - "15672:15672"  # HTTP management UI port
    volumes:
      - ../_storage/rabbitmq_data:/var/lib/rabbitmq
      - ../_storage/rabbitmq_log:/var/log/rabbitmq
    networks:
      - bot-net
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 5s
      timeout: 5s
      retries: 5

  poller:
    image: poller-image
    build:
      context: ../poller
      dockerfile: ../docker/Dockerfile.poller
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - bot-net
    env_file:
      - ../docker/env/tgclient.env
      - ../docker/env/broker_docker.env

volumes:
  rabbitmq_data:
  rabbitmq_log:
  postgres_data:

networks:
  bot-net:
    driver: bridge